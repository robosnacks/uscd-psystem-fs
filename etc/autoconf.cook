/*
 * UCSD p-System filesystem in user space
 * Copyright (C) 2006-2008, 2012 Peter Miller
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */


/*
 * This file is generated by autoconf.
 * It is architecture specific.
 * If it is not found (not cooked yet) the following
 * symbols will be undefined.
 *
 *      Must be included *after* the search_list is defined.
 */
libs = ;
#include-cooked-nowarn [arch]/etc/Howto.conf
if [not [defined prefix]] then
    prefix = /usr/local;
if [not [defined exec_prefix]] then
    exec_prefix = [prefix];
if [not [defined yacc]] then
    yacc = yacc;
if [not [defined libs]] then
    libs = ;
if [not [defined cxx]] then
    cxx = ['if' [find_command g++] 'then' g++ 'else' c++];


configure: etc/configure.ac install-sh
{
    if [quiet] then
        function print Generate [target];
    if [not [exists install-sh]] then
    {
        /*
         * Cook says it is up-to-date, so it must be in the
         * baseline; autoconf needs it in the current directory.
         */
        cp [resolve install-sh] .
            set clearstat;
    }
    autoconf [resolve etc/configure.ac] > [target];
    chmod 755 [target];
}

/*
 * The install-sh script can come from a huge range of places, depending
 * on what distribution you have installed (or whether you built it from
 * the tarball).
 */
loop install-sh-maybe =
    /usr/share/autoconf/install-sh
    [glob /usr/share/automake*/install-sh]
    /usr/local/share/autoconf/install-sh
    [glob /usr/local/share/automake*/install-sh]
{
    if [exists [install-sh-maybe]] then
    {
        install-sh = [install-sh-maybe];
        loopstop;
    }
}
if [not [install-sh]] then
    fail "Can't locate the ``install-sh'' script from GNU automake";

install-sh: [install-sh]
{
    if [quiet] then
        function print Copy [target];
    cp [need] [target];
    chmod 755 [target];
}


[arch]/config.status: configure install-sh
{
    if [quiet] then
        function print Generate [target];
    if [not [exists install-sh]] then
    {
        /*
         * Cook says it is up-to-date, so it must be in the
         * baseline; autoconf needs it in the current directory.
         */
        cp [resolve install-sh] .
            set clearstat;
    }
    ./[resolve configure] --cache-file\=/dev/null --verbose --no-create
        ['if' [quiet] 'then' --quiet]
        ;
    mv config.status [arch]/config.status;
    if [exists config.log] then
        mv config.log [arch]/config.log;
}

lib/config.h.in: etc/configure.ac
{
    if [quiet] then
        function print Generate [target];
    autoheader [resolve etc/configure.ac] > [target];
}


[arch]/%0%.h: %0%.h.in [arch]/config.status
    single-thread conftest.subs
{
    CONFIG_FILES\= CONFIG_HEADERS\=[target]\:[resolve %0%.h.in]
        [resolve [arch]/config.status];
}

[arch]/%0%: %0%.in [arch]/config.status
    single-thread conftest.subs
{
    CONFIG_FILES\=[target]\:[resolve %0%.in] CONFIG_HEADERS\=
        [resolve [arch]/config.status];
}

all +=
    [fromto script/%.in [arch]/bin/%
        [match_mask script/%.in [source_files]]
    ];

[arch]/bin/%: script/%.in [arch]/config.status
    single-thread conftest.subs
{
    CONFIG_FILES\=[target]\:[resolve script/%.in] CONFIG_HEADERS\=
        [resolve [arch]/config.status];
    chmod a+rx [target];
}

/* Sigh */
cascade lib/common/vsnprintf.cc = [arch]/lib/config.h;
